services:
  postgres_db1:
    image: postgres:latest
    container_name: retail
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: retail
    ports:
      - "5434:5432"
    volumes:
      - postgres_data_db1:/var/lib/postgresql/data
    restart: unless-stopped

  postgres_db2:
    image: postgres:latest
    container_name: dwh
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: dwh
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_db2:/var/lib/postgresql/data
    restart: unless-stopped

  postgres_db3:
    image: postgres:latest
    container_name: loans
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: loans
    ports:
      - "5437:5432"
    volumes:
      - postgres_data_db3:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # Файл инициализации
    restart: unless-stopped

  postgres_db4:
    image: postgres:latest
    container_name: dwh_bank
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: dwh_bank
    ports:
      - "5438:5432"
    volumes:
      - postgres_data_db4:/var/lib/postgresql/data
    restart: unless-stopped

  postgres_airflow:
    image: postgres:latest
    container_name: postgres_airflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow_db
    ports:
      - "5435:5432"  # Измените порт, если это необходимо
    volumes:
      - postgres_data_airflow:/var/lib/postgresql/data
    restart: unless-stopped

  airflow_webserver:
    image: apache/airflow:2.5.0
    container_name: airflow_webserver
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airflow:5432/airflow_db
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__SECRET_KEY: my_secret_key
      AIRFLOW__WEBSERVER__RBAC: 'True'
      AIRFLOW__WEBSERVER__WORKERS: 4
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
    ports:
      - "8080:8080"
    depends_on:
      - postgres_airflow
    entrypoint: /bin/bash -c "pip install --no-cache-dir -r /requirements.txt && exec airflow standalone"
    restart: unless-stopped

  airflow_scheduler:
    image: apache/airflow:2.5.0
    container_name: airflow_scheduler
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres_airflow:5432/airflow_db
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: my_secret_key
      AIRFLOW__WEBSERVER__RBAC: 'True'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./dags/tasks:/opt/airflow/dags/tasks
      - ./dags/hooks:/opt/airflow/dags/hooks
      - ./dags/operators:/opt/airflow/dags/operators
      - ./dags/data:/opt/airflow/dags/data
      - ./logs:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
    depends_on:
      - postgres_airflow
    entrypoint: /bin/bash -c "pip install --no-cache-dir -r /requirements.txt && exec airflow scheduler"
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    restart: unless-stopped

  postgres_metabase:
    image: postgres:latest
    container_name: postgres_metabase
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: metabase_db
    ports:
      - "5436:5432"  # Измените порт, чтобы избежать конфликта
    volumes:
      - postgres_data_metabase:/var/lib/postgresql/data
    restart: unless-stopped

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase_db
      MB_DB_PORT: 5432
      MB_DB_USER: admin
      MB_DB_PASS: admin
      MB_DB_HOST: postgres_metabase
    ports:
      - "3000:3000"
    depends_on:
      - postgres_metabase
    restart: unless-stopped

volumes:
  postgres_data_db1:
  postgres_data_db2:
  postgres_data_db3:
  postgres_data_db4:
  postgres_data_airflow:
  kafka_data:
  postgres_data_metabase: